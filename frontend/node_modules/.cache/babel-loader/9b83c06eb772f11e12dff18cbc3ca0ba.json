{"ast":null,"code":"var _jsxFileName = \"/Users/yuewang/Desktop/Job/new/EQProject/frontend/src/components/Map.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup, Marker } from \"react-simple-maps\";\nimport API from '../API/api.js';\nimport '../css/Map.css';\nimport { MDBDataTable } from 'mdbreact';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nconst apiCall = new API();\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nexport default class MapChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stats: null,\n      limitReached: false\n    };\n  }\n\n  componentDidMount() {\n    apiCall.getPoiDailyStats().then(response => {\n      if (typeof response !== 'undefined') {\n        this.setState({\n          stats: response\n        });\n      } else {\n        this.setState({\n          limitReached: true\n        });\n      }\n    });\n  }\n\n  render() {\n    var {\n      stats,\n      limitReached\n    } = this.state;\n    var markers = [];\n    var names = {};\n\n    if (stats !== null) {\n      for (var i = 0; i < stats.length; i++) {\n        if (names[stats[i]['name']] == null) {\n          names[stats[i]['name']] = 1;\n        } else {\n          names[stats[i]['name']] += 1;\n        }\n\n        markers.push({\n          markerOffset: 15,\n          name: stats[i]['name'],\n          coordinates: [stats[i]['lon'], stats[i]['lat']]\n        });\n      }\n    }\n\n    var locations = [];\n\n    for (var key in names) {\n      locations.push({\n        \"names\": key,\n        \"count\": names[key]\n      });\n    }\n\n    const data = {\n      columns: [{\n        label: 'Location',\n        field: 'names',\n        sort: 'asc',\n        width: 200\n      }, {\n        label: 'Count',\n        field: 'count',\n        sort: 'asc',\n        width: 200\n      }],\n      rows: locations\n    };\n    console.log(\"here\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, !limitReached ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ComposableMap, {\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n      zoom: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Geographies, {\n      geography: geoUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, ({\n      geographies\n    }) => geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }\n    }))), markers.map(({\n      name,\n      coordinates,\n      markerOffset\n    }) => /*#__PURE__*/React.createElement(Marker, {\n      key: coordinates,\n      coordinates: coordinates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      fill: \"none\",\n      stroke: \"#FF5533\",\n      strokeWidth: \"1\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      transform: \"translate(-12, -24)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      cx: \"12\",\n      cy: \"10\",\n      r: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TableEvents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBDataTable, {\n      striped: true,\n      bordered: true,\n      small: true,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    })))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"limit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Geo Call Limit Reached\"));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/yuewang/Desktop/Job/new/EQProject/frontend/src/components/Map.js"],"names":["React","Component","ComposableMap","Geographies","Geography","ZoomableGroup","Marker","API","MDBDataTable","apiCall","geoUrl","MapChart","constructor","props","state","stats","limitReached","componentDidMount","getPoiDailyStats","then","response","setState","render","markers","names","i","length","push","markerOffset","name","coordinates","locations","key","data","columns","label","field","sort","width","rows","console","log","geographies","map","geo","rsmKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    ComposableMap,\n    Geographies,\n    Geography,\n    ZoomableGroup,\n    Marker,\n} from \"react-simple-maps\";\nimport API from '../API/api.js';\nimport '../css/Map.css';\nimport { MDBDataTable } from 'mdbreact';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nconst apiCall = new API();\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n\nexport default class MapChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stats:null,\n            limitReached:false\n        }\n    }\n\n    componentDidMount() {\n        apiCall.getPoiDailyStats()\n        .then(response => {\n            if (typeof response!=='undefined'){\n                this.setState({stats: response});\n            }\n            else {\n                this.setState({limitReached: true});\n            }\n        })\n    }\n\n    render() {\n      var {stats, limitReached} = this.state;\n      var markers = [];\n      var names = {};\n\n      if (stats!==null) {\n        for (var i=0; i<stats.length; i++) {\n          if (names[stats[i]['name']]==null) {\n            names[stats[i]['name']] = 1;\n          } else {\n            names[stats[i]['name']] += 1;\n          }\n          markers.push( { markerOffset: 15, name: stats[i]['name'], coordinates: [stats[i]['lon'], stats[i]['lat']] },)\n        }\n      }\n      var locations = [];\n      for (var key in names) {\n        locations.push({\"names\": key, \"count\":names[key]});\n      }\n      \n      const data = {\n        columns: [\n            {\n                label: 'Location',\n                field: 'names',\n                sort: 'asc',\n                width: 200\n            },\n            {\n                label: 'Count',\n                field: 'count',\n                sort: 'asc',\n                width: 200\n            }\n        ],\n        rows: locations\n      };\n      console.log(\"here\");\n      return(\n        <div>\n        {!limitReached ? <div>\n          <div>\n          <ComposableMap className='map'>\n              <ZoomableGroup zoom={1}>\n              <Geographies geography={geoUrl}>\n                  {({ geographies }) =>\n                  geographies.map(geo => (\n                      <Geography key={geo.rsmKey} geography={geo} />\n                  ))\n                  }\n              </Geographies>\n\n              {markers.map(({ name, coordinates, markerOffset }) => (\n                <Marker key={coordinates} coordinates={coordinates}>\n                  <g\n                    fill=\"none\"\n                    stroke=\"#FF5533\"\n                    strokeWidth=\"1\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    transform=\"translate(-12, -24)\"\n                  >\n                    <circle cx=\"12\" cy=\"10\" r=\"2\" />\n                    <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                  </g>\n                </Marker>))}\n              </ZoomableGroup>\n          </ComposableMap>\n          <div className=\"TableEvents\">\n          <MDBDataTable\n              striped\n              bordered\n              small\n              data={data}\n          />\n          </div>\n        </div>\n          </div>\n          : \n        <div className='limit'>\n            Geo Call Limit Reached\n        </div>}\n      </div>\n      );\n    };\n};"]},"metadata":{},"sourceType":"module"}