{"ast":null,"code":"var _jsxFileName = \"/Users/yuewang/Desktop/Job/git/EQWorks/frontend/eqworks/src/components/HourlyEvents.js\";\nimport React, { Component } from 'react';\nimport API from '../API/api.js';\nimport '../css/Events.css';\nimport { MDBDataTable } from 'mdbreact';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Label } from 'recharts';\nconst apiCall = new API();\n\nclass HourlyEvents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: null,\n      limitReached: false\n    };\n  }\n\n  componentDidMount() {\n    apiCall.getHourlyEvents().then(response => {\n      if (typeof response !== 'undefined') {\n        this.setState({\n          events: response\n        });\n      } else {\n        this.setState({\n          limitReached: true\n        });\n      }\n    });\n  }\n\n  render() {\n    var {\n      events,\n      limitReached\n    } = this.state;\n    const data = {\n      columns: [{\n        label: 'Date',\n        field: 'date',\n        sort: 'asc',\n        width: 270\n      }, {\n        label: 'Events',\n        field: 'events',\n        sort: 'asc',\n        width: 200\n      }, {\n        label: 'Hour',\n        field: 'hour',\n        sort: 'asc',\n        width: 200\n      }],\n      rows: events\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, !limitReached ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"BarChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Hourly Events\"), /*#__PURE__*/React.createElement(BarChart, {\n      width: 700,\n      height: 400,\n      data: events,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"hour\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      style: {\n        textAnchor: 'middle'\n      },\n      dy: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Hours\")), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      angle: 270,\n      position: \"left\",\n      style: {\n        textAnchor: 'middle'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Events\")), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"events\",\n      fill: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TableEvents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBDataTable, {\n      striped: true,\n      bordered: true,\n      small: true,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Hourly Events Call Limit Reached\"));\n  }\n\n}\n\nexport default HourlyEvents;","map":{"version":3,"sources":["/Users/yuewang/Desktop/Job/git/EQWorks/frontend/eqworks/src/components/HourlyEvents.js"],"names":["React","Component","API","MDBDataTable","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Label","apiCall","HourlyEvents","constructor","props","state","events","limitReached","componentDidMount","getHourlyEvents","then","response","setState","render","data","columns","label","field","sort","width","rows","top","right","left","bottom","textAnchor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport API from '../API/api.js';\nimport '../css/Events.css';\nimport { MDBDataTable } from 'mdbreact';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Label\n  } from 'recharts';\n\nconst apiCall = new API();\n\nclass HourlyEvents extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            events:null,\n            limitReached:false\n        }\n    }\n    componentDidMount() {\n        apiCall.getHourlyEvents()\n        .then(response => {\n            if (typeof response!=='undefined'){\n                this.setState({events: response});\n            }\n            else {\n                this.setState({limitReached: true});\n            }\n        })\n    }\n\n    render() {\n        var { events, limitReached } = this.state;\n        const data = {\n            columns: [\n                {\n                    label: 'Date',\n                    field: 'date',\n                    sort: 'asc',\n                    width: 270\n                },\n                {\n                    label: 'Events',\n                    field: 'events',\n                    sort: 'asc',\n                    width: 200\n                },\n                {\n                    label: 'Hour',\n                    field: 'hour',\n                    sort: 'asc',\n                    width: 200\n                }\n            ],\n            rows: events\n        };\n        return(\n            <div>\n                {!limitReached ? <div>\n                    <div className=\"BarChart\">\n                    <h1>Hourly Events</h1>\n                    <BarChart width={700} height={400} data={events}\n                        margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis dataKey=\"hour\">\n                        <Label style={{ textAnchor: 'middle' }} dy={10}>\n                        Hours\n                        </Label>\n                    </XAxis>\n                    <YAxis>\n                    <Label angle={270} position='left' style={{ textAnchor: 'middle' }}>\n                        Events\n                    </Label>\n                    </YAxis>\n                    <Tooltip/>\n                    <Bar dataKey=\"events\" fill=\"#8884d8\" />\n                    </BarChart></div>\n                    <div className=\"TableEvents\">\n                    <MDBDataTable\n                        striped\n                        bordered\n                        small\n                        data={data}\n                    />\n                    </div>\n                </div>\n                 : \n                <div>\n                    Hourly Events Call Limit Reached\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default HourlyEvents;"]},"metadata":{},"sourceType":"module"}